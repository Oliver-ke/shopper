import firebase from 'firebase/app';
import 'firebase/firestore';
import 'firebase/auth';

const config = {
	apiKey: 'AIzaSyA9IhycWmnkZ6aBPq9Aoh0v-wCnjaxGrQg',
	authDomain: 'shopper-c5e45.firebaseapp.com',
	databaseURL: 'https://shopper-c5e45.firebaseio.com',
	projectId: 'shopper-c5e45',
	storageBucket: 'shopper-c5e45.appspot.com',
	messagingSenderId: '356046318556',
	appId: '1:356046318556:web:ef06aed0257b63cd32fd19',
	measurementId: 'G-FMJ0G91YHF',
};

firebase.initializeApp(config);
export const auth = firebase.auth();
export const firestore = firebase.firestore();

// create users profile
export const createUserProfileDocument = async (userAuth, additionalData) => {
	if (!userAuth) return;
	const userRef = firestore.doc(`users/${userAuth.uid}`);
	const snapshot = await userRef.get();
	if (!snapshot.exists) {
		const { displayName, email, photoURL } = userAuth;
		const createdAt = new Date();
		try {
			await userRef.set({
				displayName,
				email,
				photoURL,
				createdAt,
				...additionalData,
			});
		} catch (error) {
			console.log('Error creating user', error.message);
		}
	}
	return userRef;
};

// google authentication
const provider = new firebase.auth.GoogleAuthProvider();
provider.setCustomParameters({ prompt: 'select_account' });

export const signInWithGoogle = () => auth.signInWithPopup(provider);

export const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {
	const collectionRef = firestore.collection(collectionKey);

	// using this to add multiple items at the same time
	const batch = firestore.batch();
	objectsToAdd.forEach((item) => {
		// creating a new document with a unique id generated by firebase
		// you can pass in your own specified id
		// const docRef = collectionRef.doc(item.id);
		const docRef = collectionRef.doc();
		batch.set(docRef, item);
	});

	return await batch.commit();
};

export const converCollectionSnapShotToMap = (collections) => {
	const transformedCollection = collections.docs.map((doc) => {
		const { title, items } = doc.data();
		return {
			routeName: encodeURI(title.toLowerCase()),
			id: doc.id,
			title,
			items,
		};
	});

	// changing the array to object maps
	return transformedCollection.reduce((accumulator, collection) => {
		accumulator[collection.title.toLowerCase()] = collection;
		return accumulator;
	}, {});
};

export default firebase;
